// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Season {
  id           Int                 @id @default(autoincrement())
  startedAt    DateTime            @default(now()) // debating on just changing this to createdAt
  endedAt      DateTime?
  players      PlayerAtTeam[]
  competitions TeamInCompetition[]
}

model Competition {
  id    Int                 @id @default(autoincrement())
  name  String
  teams TeamInCompetition[]
}

model Match {
  id Int @id @default(autoincrement()) // NEED TO LINK MATCHES AND TEAMS?
}

model Team {
  id           Int                 @id @default(autoincrement())
  discordId    String
  createdAt    DateTime            @default(now())
  name         String
  players      PlayerAtTeam[]
  competitions TeamInCompetition[]
}

model TeamInCompetition {
  team          Team        @relation(fields: [teamId], references: [id])
  teamId        Int
  competition   Competition @relation(fields: [competitionId], references: [id])
  competitionId Int
  season        Season      @relation(fields: [seasonId], references: [id])
  seasonId      Int

  @@id([teamId, competitionId, seasonId])
}

model Player {
  id        Int            @id @default(autoincrement())
  createdAt DateTime       @default(now())
  discordId String         @unique
  teams     PlayerAtTeam[]
}

model PlayerAtTeam {
  player   Player @relation(fields: [playerId], references: [id])
  playerId Int
  team     Team   @relation(fields: [teamId], references: [id])
  teamId   Int
  season   Season @relation(fields: [seasonId], references: [id])
  seasonId Int

  @@id([playerId, teamId])
}
